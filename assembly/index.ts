
let viewLength: i32
let channelLength: i32
let width: i32
let height: i32
const viewOffsets = new StaticArray<u32>(4)
const countOffsets = new StaticArray<u32>(4)
const displayCountOffsets = new StaticArray<u32>(4)

declare function consoleLog(arg0: i32): void;
declare function consoleFloat(arg0: f32): void;

const curve = new Float32Array(256)
const lineUp = new Float32Array(256)
const lineDown = new Float32Array(256)

const curveExpUp = new Float32Array(256)
const curveExpDown = new Float32Array(256)

const curveRootUp = new Float32Array(256)
const curveRootDown = new Float32Array(256)

const curveRootMidUp = new Float32Array(256)
const curveRootMidDown = new Float32Array(256)

const curveShadows = new Float32Array(256)

const curveGrayUp = new Float32Array(256)
const curveGrayDown = new Float32Array(256)

export function initData (_width: i32, _height: i32, _totalViews: u32): void {
  width = _width
  height = _height
  channelLength = width * height
  viewLength = channelLength * 4

  let arrayOffset = 0
  for (let i: u32 = 0; i < _totalViews; i++) {
    viewOffsets[i] = arrayOffset
    arrayOffset += viewLength
  }
  for (let i: u32 = 0; i < _totalViews; i++) {
    countOffsets[i] = arrayOffset
    arrayOffset += (256 * 4 * 3)
  }
  for (let i: u32 = 0; i < _totalViews; i++) {
    displayCountOffsets[i] = arrayOffset
    arrayOffset += (256 * 3)
  }
  const vals = [0.5019607843137255, 0.5058823529411764, 0.5098039215686274, 0.5137254901960784, 0.5176470588235295, 0.5215686274509804, 0.5254901960784314, 0.5294117647058824, 0.5333333333333333, 0.5372549019607843, 0.5411764705882353, 0.5450980392156862, 0.5490196078431373, 0.5529411764705883, 0.5568627450980392, 0.5607843137254902, 0.5647058823529412, 0.5686274509803921, 0.5725490196078431, 0.5764705882352941, 0.5803921568627451, 0.5843137254901961, 0.5882352941176471, 0.592156862745098, 0.596078431372549, 0.6, 0.6039215686274509, 0.6078431372549019, 0.611764705882353, 0.615686274509804, 0.6196078431372549, 0.6235294117647059, 0.6274509803921569, 0.6313725490196078, 0.6352941176470588, 0.6392156862745098, 0.6431372549019608, 0.6470588235294118, 0.6509803921568628, 0.6549019607843137, 0.6588235294117647, 0.6627450980392157, 0.6666666666666666, 0.6705882352941176, 0.6745098039215687, 0.6784313725490196, 0.6823529411764706, 0.6862745098039216, 0.6901960784313725, 0.6941176470588235, 0.6980392156862745, 0.7019607843137254, 0.7058823529411765, 0.7098039215686275, 0.7137254901960784, 0.7176470588235294, 0.7215686274509804, 0.7254901960784313, 0.7294117647058823, 0.7333333333333333, 0.7372549019607844, 0.7411764705882353, 0.7450980392156863, 0.7490196078431373, 0.7529411764705882, 0.7568627450980392, 0.7607843137254902, 0.7647058823529411, 0.7686274509803922, 0.7725490196078432, 0.7764705882352941, 0.7803921568627451, 0.7843137254901961, 0.788235294117647, 0.792156862745098, 0.796078431372549, 0.8, 0.803921568627451, 0.807843137254902, 0.8117647058823529, 0.8156862745098039, 0.8196078431372549, 0.8235294117647058, 0.8274509803921568, 0.8313725490196079, 0.8352941176470589, 0.8392156862745098, 0.8431372549019608, 0.8470588235294118, 0.8509803921568627, 0.8549019607843137, 0.8588235294117647, 0.8627450980392157, 0.8666666666666667, 0.8705882352941177, 0.8745098039215686, 0.8784313725490196, 0.8823529411764706, 0.8862745098039215, 0.8901960784313725, 0.8941176470588236, 0.8980392156862745, 0.9019607843137255, 0.9058823529411765, 0.9098039215686274, 0.9137254901960784, 0.9176470588235294, 0.9215686274509803, 0.9254901960784314, 0.9294117647058824, 0.9333333333333333, 0.9372549019607843, 0.9411764705882353, 0.9450980392156862, 0.9490196078431372, 0.9529411764705882, 0.9568627450980393, 0.9607843137254902, 0.9647058823529412, 0.9686274509803922, 0.9725490196078431, 0.9764705882352941, 0.9803921568627451, 0.984313725490196, 0.9882352941176471, 0.9921568627450981, 0.996078431372549, 1, 1, 0.996078431372549, 0.9921568627450981, 0.9882352941176471, 0.984313725490196, 0.9803921568627451, 0.9764705882352941, 0.9725490196078431, 0.9686274509803922, 0.9647058823529412, 0.9607843137254902, 0.9568627450980393, 0.9529411764705882, 0.9490196078431372, 0.9450980392156862, 0.9411764705882353, 0.9372549019607843, 0.9333333333333333, 0.9294117647058824, 0.9254901960784314, 0.9215686274509803, 0.9176470588235294, 0.9137254901960784, 0.9098039215686274, 0.9058823529411765, 0.9019607843137255, 0.8980392156862745, 0.8941176470588236, 0.8901960784313725, 0.8862745098039215, 0.8823529411764706, 0.8784313725490196, 0.8745098039215686, 0.8705882352941177, 0.8666666666666667, 0.8627450980392157, 0.8588235294117647, 0.8549019607843137, 0.8509803921568627, 0.8470588235294118, 0.8431372549019608, 0.8392156862745098, 0.8352941176470589, 0.8313725490196079, 0.8274509803921568, 0.8235294117647058, 0.8196078431372549, 0.8156862745098039, 0.8117647058823529, 0.807843137254902, 0.803921568627451, 0.8, 0.796078431372549, 0.792156862745098, 0.788235294117647, 0.7843137254901961, 0.7803921568627451, 0.7764705882352941, 0.7725490196078432, 0.7686274509803922, 0.7647058823529411, 0.7607843137254902, 0.7568627450980392, 0.7529411764705882, 0.7490196078431373, 0.7450980392156863, 0.7411764705882353, 0.7372549019607844, 0.7333333333333333, 0.7294117647058823, 0.7254901960784313, 0.7215686274509804, 0.7176470588235294, 0.7137254901960784, 0.7098039215686275, 0.7058823529411765, 0.7019607843137254, 0.6980392156862745, 0.6941176470588235, 0.6901960784313725, 0.6862745098039216, 0.6823529411764706, 0.6784313725490196, 0.6745098039215687, 0.6705882352941176, 0.6666666666666666, 0.6627450980392157, 0.6588235294117647, 0.6549019607843137, 0.6509803921568628, 0.6470588235294118, 0.6431372549019608, 0.6392156862745098, 0.6352941176470588, 0.6313725490196078, 0.6274509803921569, 0.6235294117647059, 0.6196078431372549, 0.615686274509804, 0.611764705882353, 0.6078431372549019, 0.6039215686274509, 0.6, 0.596078431372549, 0.592156862745098, 0.5882352941176471, 0.5843137254901961, 0.5803921568627451, 0.5764705882352941, 0.5725490196078431, 0.5686274509803921, 0.5647058823529412, 0.5607843137254902, 0.5568627450980392, 0.5529411764705883, 0.5490196078431373, 0.5450980392156862, 0.5411764705882353, 0.5372549019607843, 0.5333333333333333, 0.5294117647058824, 0.5254901960784314, 0.5215686274509804, 0.5176470588235295, 0.5137254901960784, 0.5098039215686274, 0.5058823529411764, 0.5019607843137255]
  const valsLineUp = [0, 0.00392156862745098, 0.00784313725490196, 0.011764705882352941, 0.01568627450980392, 0.0196078431372549, 0.023529411764705882, 0.027450980392156862, 0.03137254901960784, 0.03529411764705882, 0.0392156862745098, 0.043137254901960784, 0.047058823529411764, 0.050980392156862744, 0.054901960784313725, 0.058823529411764705, 0.06274509803921569, 0.06666666666666667, 0.07058823529411765, 0.07450980392156863, 0.0784313725490196, 0.08235294117647059, 0.08627450980392157, 0.09019607843137255, 0.09411764705882353, 0.09803921568627451, 0.10196078431372549, 0.10588235294117647, 0.10980392156862745, 0.11372549019607843, 0.11764705882352941, 0.12156862745098039, 0.12549019607843137, 0.12941176470588234, 0.13333333333333333, 0.13725490196078433, 0.1411764705882353, 0.14509803921568626, 0.14901960784313725, 0.15294117647058825, 0.1568627450980392, 0.16078431372549018, 0.16470588235294117, 0.16862745098039217, 0.17254901960784313, 0.1764705882352941, 0.1803921568627451, 0.1843137254901961, 0.18823529411764706, 0.19215686274509802, 0.19607843137254902, 0.2, 0.20392156862745098, 0.20784313725490194, 0.21176470588235294, 0.21568627450980393, 0.2196078431372549, 0.22352941176470587, 0.22745098039215686, 0.23137254901960785, 0.23529411764705882, 0.2392156862745098, 0.24313725490196078, 0.24705882352941178, 0.25098039215686274, 0.2549019607843137, 0.2588235294117647, 0.2627450980392157, 0.26666666666666666, 0.27058823529411763, 0.27450980392156865, 0.2784313725490196, 0.2823529411764706, 0.28627450980392155, 0.2901960784313725, 0.29411764705882354, 0.2980392156862745, 0.30196078431372547, 0.3058823529411765, 0.30980392156862746, 0.3137254901960784, 0.3176470588235294, 0.32156862745098036, 0.3254901960784314, 0.32941176470588235, 0.3333333333333333, 0.33725490196078434, 0.3411764705882353, 0.34509803921568627, 0.34901960784313724, 0.3529411764705882, 0.3568627450980392, 0.3607843137254902, 0.36470588235294116, 0.3686274509803922, 0.37254901960784315, 0.3764705882352941, 0.3803921568627451, 0.38431372549019605, 0.38823529411764707, 0.39215686274509803, 0.396078431372549, 0.4, 0.403921568627451, 0.40784313725490196, 0.4117647058823529, 0.4156862745098039, 0.4196078431372549, 0.4235294117647059, 0.42745098039215684, 0.43137254901960786, 0.43529411764705883, 0.4392156862745098, 0.44313725490196076, 0.44705882352941173, 0.45098039215686275, 0.4549019607843137, 0.4588235294117647, 0.4627450980392157, 0.4666666666666667, 0.47058823529411764, 0.4745098039215686, 0.4784313725490196, 0.4823529411764706, 0.48627450980392156, 0.49019607843137253, 0.49411764705882355, 0.4980392156862745, 0.5019607843137255, 0.5058823529411764, 0.5098039215686274, 0.5137254901960784, 0.5176470588235293, 0.5215686274509804, 0.5254901960784314, 0.5294117647058824, 0.5333333333333333, 0.5372549019607843, 0.5411764705882353, 0.5450980392156862, 0.5490196078431373, 0.5529411764705883, 0.5568627450980392, 0.5607843137254902, 0.5647058823529412, 0.5686274509803921, 0.5725490196078431, 0.5764705882352941, 0.580392156862745, 0.5843137254901961, 0.5882352941176471, 0.592156862745098, 0.596078431372549, 0.6, 0.6039215686274509, 0.6078431372549019, 0.611764705882353, 0.615686274509804, 0.6196078431372549, 0.6235294117647059, 0.6274509803921569, 0.6313725490196078, 0.6352941176470588, 0.6392156862745098, 0.6431372549019607, 0.6470588235294118, 0.6509803921568628, 0.6549019607843137, 0.6588235294117647, 0.6627450980392157, 0.6666666666666666, 0.6705882352941176, 0.6745098039215687, 0.6784313725490196, 0.6823529411764706, 0.6862745098039216, 0.6901960784313725, 0.6941176470588235, 0.6980392156862745, 0.7019607843137254, 0.7058823529411764, 0.7098039215686275, 0.7137254901960784, 0.7176470588235294, 0.7215686274509804, 0.7254901960784313, 0.7294117647058823, 0.7333333333333333, 0.7372549019607844, 0.7411764705882353, 0.7450980392156863, 0.7490196078431373, 0.7529411764705882, 0.7568627450980392, 0.7607843137254902, 0.7647058823529411, 0.7686274509803921, 0.7725490196078432, 0.7764705882352941, 0.7803921568627451, 0.7843137254901961, 0.788235294117647, 0.792156862745098, 0.796078431372549, 0.8, 0.803921568627451, 0.807843137254902, 0.8117647058823529, 0.8156862745098039, 0.8196078431372549, 0.8235294117647058, 0.8274509803921568, 0.8313725490196078, 0.8352941176470589, 0.8392156862745098, 0.8431372549019608, 0.8470588235294118, 0.8509803921568627, 0.8549019607843137, 0.8588235294117647, 0.8627450980392157, 0.8666666666666667, 0.8705882352941177, 0.8745098039215686, 0.8784313725490196, 0.8823529411764706, 0.8862745098039215, 0.8901960784313725, 0.8941176470588235, 0.8980392156862745, 0.9019607843137255, 0.9058823529411765, 0.9098039215686274, 0.9137254901960784, 0.9176470588235294, 0.9215686274509803, 0.9254901960784314, 0.9294117647058824, 0.9333333333333333, 0.9372549019607843, 0.9411764705882353, 0.9450980392156862, 0.9490196078431372, 0.9529411764705882, 0.9568627450980391, 0.9607843137254902, 0.9647058823529412, 0.9686274509803922, 0.9725490196078431, 0.9764705882352941, 0.9803921568627451, 0.984313725490196, 0.9882352941176471, 0.9921568627450981, 0.996078431372549, 1]
  const valsLineDown = [1, 0.996078431372549, 0.9921568627450981, 0.9882352941176471, 0.9843137254901961, 0.9803921568627451, 0.9764705882352941, 0.9725490196078431, 0.9686274509803922, 0.9647058823529412, 0.9607843137254902, 0.9568627450980393, 0.9529411764705882, 0.9490196078431372, 0.9450980392156862, 0.9411764705882353, 0.9372549019607843, 0.9333333333333333, 0.9294117647058824, 0.9254901960784314, 0.9215686274509804, 0.9176470588235294, 0.9137254901960784, 0.9098039215686274, 0.9058823529411765, 0.9019607843137255, 0.8980392156862745, 0.8941176470588236, 0.8901960784313725, 0.8862745098039215, 0.8823529411764706, 0.8784313725490196, 0.8745098039215686, 0.8705882352941177, 0.8666666666666667, 0.8627450980392157, 0.8588235294117648, 0.8549019607843138, 0.8509803921568627, 0.8470588235294118, 0.8431372549019608, 0.8392156862745098, 0.8352941176470589, 0.8313725490196078, 0.8274509803921568, 0.8235294117647058, 0.8196078431372549, 0.8156862745098039, 0.8117647058823529, 0.807843137254902, 0.803921568627451, 0.8, 0.7960784313725491, 0.7921568627450981, 0.788235294117647, 0.7843137254901961, 0.7803921568627451, 0.7764705882352941, 0.7725490196078432, 0.7686274509803921, 0.7647058823529411, 0.7607843137254902, 0.7568627450980392, 0.7529411764705882, 0.7490196078431373, 0.7450980392156863, 0.7411764705882353, 0.7372549019607844, 0.7333333333333334, 0.7294117647058824, 0.7254901960784313, 0.7215686274509804, 0.7176470588235294, 0.7137254901960784, 0.7098039215686275, 0.7058823529411764, 0.7019607843137254, 0.6980392156862745, 0.6941176470588235, 0.6901960784313725, 0.6862745098039216, 0.6823529411764706, 0.6784313725490196, 0.6745098039215687, 0.6705882352941177, 0.6666666666666667, 0.6627450980392157, 0.6588235294117647, 0.6549019607843137, 0.6509803921568628, 0.6470588235294118, 0.6431372549019607, 0.6392156862745098, 0.6352941176470588, 0.6313725490196078, 0.6274509803921569, 0.6235294117647059, 0.6196078431372549, 0.615686274509804, 0.611764705882353, 0.607843137254902, 0.603921568627451, 0.6, 0.596078431372549, 0.592156862745098, 0.5882352941176471, 0.5843137254901961, 0.580392156862745, 0.5764705882352941, 0.5725490196078431, 0.5686274509803921, 0.5647058823529412, 0.5607843137254902, 0.5568627450980392, 0.5529411764705883, 0.5490196078431373, 0.5450980392156863, 0.5411764705882354, 0.5372549019607843, 0.5333333333333333, 0.5294117647058824, 0.5254901960784314, 0.5215686274509804, 0.5176470588235293, 0.5137254901960784, 0.5098039215686274, 0.5058823529411764, 0.5019607843137255, 0.4980392156862745, 0.49411764705882355, 0.4901960784313726, 0.4862745098039216, 0.48235294117647065, 0.4784313725490196, 0.4745098039215686, 0.47058823529411764, 0.4666666666666667, 0.4627450980392157, 0.45882352941176474, 0.4549019607843138, 0.4509803921568627, 0.44705882352941173, 0.44313725490196076, 0.4392156862745098, 0.43529411764705883, 0.43137254901960786, 0.4274509803921569, 0.42352941176470593, 0.41960784313725497, 0.4156862745098039, 0.4117647058823529, 0.40784313725490196, 0.403921568627451, 0.4, 0.39607843137254906, 0.3921568627450981, 0.388235294117647, 0.38431372549019605, 0.3803921568627451, 0.3764705882352941, 0.37254901960784315, 0.3686274509803922, 0.3647058823529412, 0.36078431372549025, 0.3568627450980393, 0.3529411764705882, 0.34901960784313724, 0.34509803921568627, 0.3411764705882353, 0.33725490196078434, 0.33333333333333337, 0.3294117647058824, 0.3254901960784313, 0.32156862745098036, 0.3176470588235294, 0.3137254901960784, 0.30980392156862746, 0.3058823529411765, 0.3019607843137255, 0.29803921568627456, 0.2941176470588236, 0.2901960784313725, 0.28627450980392155, 0.2823529411764706, 0.2784313725490196, 0.27450980392156865, 0.2705882352941177, 0.2666666666666667, 0.26274509803921564, 0.2588235294117647, 0.2549019607843137, 0.25098039215686274, 0.24705882352941178, 0.2431372549019608, 0.23921568627450984, 0.23529411764705888, 0.2313725490196079, 0.22745098039215683, 0.22352941176470587, 0.2196078431372549, 0.21568627450980393, 0.21176470588235297, 0.207843137254902, 0.20392156862745103, 0.19999999999999996, 0.196078431372549, 0.19215686274509802, 0.18823529411764706, 0.1843137254901961, 0.18039215686274512, 0.17647058823529416, 0.1725490196078432, 0.16862745098039222, 0.16470588235294115, 0.16078431372549018, 0.1568627450980392, 0.15294117647058825, 0.14901960784313728, 0.14509803921568631, 0.14117647058823535, 0.13725490196078427, 0.1333333333333333, 0.12941176470588234, 0.12549019607843137, 0.1215686274509804, 0.11764705882352944, 0.11372549019607847, 0.1098039215686275, 0.10588235294117654, 0.10196078431372546, 0.0980392156862745, 0.09411764705882353, 0.09019607843137256, 0.0862745098039216, 0.08235294117647063, 0.07843137254901966, 0.07450980392156858, 0.07058823529411762, 0.06666666666666665, 0.06274509803921569, 0.05882352941176472, 0.05490196078431375, 0.050980392156862786, 0.04705882352941182, 0.04313725490196085, 0.039215686274509776, 0.03529411764705881, 0.03137254901960784, 0.027450980392156876, 0.02352941176470591, 0.019607843137254943, 0.015686274509803977, 0.0117647058823529, 0.007843137254901933, 0.0039215686274509665, 0]

  const valscurveExpUp = [0, 0.000007689379813213826, 0.00003075787402306851, 0.00006920654702224915, 0.00012303717307138307, 0.00019225223670882308, 0.00027685493332363365, 0.0003768491698936671, 0.0004922395658889522, 0.0006230314543387294, 0.0007692308830661299, 0.0009308446160880557, 0.001107880135183148, 0.0013003456416276205, 0.001508250058100069, 0.001731603030756479, 0.0019704149314765385, 0.0022246968602822603, 0.0024944606479309073, 0.002779718858682001, 0.0030804847932421886, 0.0033967724918884112, 0.003728596737769929, 0.004075973060393756, 0.004438917739292725, 0.004817447807880737, 0.005211581057494419, 0.005621336041626401, 0.006046732080350448, 0.006487789264942312, 0.006944528462698107, 0.007416971321952959, 0.00790514027730349, 0.008409058555036264, 0.008928750178766265, 0.009464239975287225, 0.01001555358063877, 0.010582717446393497, 0.011165758846166551, 0.0117647058823529, 0.012379587493095756, 0.013010433459490267, 0.013657274413026776, 0.014320141843278122, 0.014999068105835622, 0.0156940864304993, 0.016405230929725456, 0.0171325366073386, 0.01787603936751292, 0.018635776024027995, 0.019411784309804836, 0.020204102886728692, 0.021012771355764848, 0.02183783026737318, 0.022679321132229036, 0.023537286432256166, 0.024411769631980884, 0.025302815190212602, 0.026210468572059997, 0.02713477626129046, 0.028075785773040707, 0.029033545666887872, 0.0300081055602891, 0.03099951614239982, 0.03200782918827927, 0.03303309757349371, 0.03407537528912874, 0.035134717457217635, 0.036211180346602534, 0.03730482138923363, 0.038415699196923114, 0.03954387357856404, 0.040689405557826186, 0.041852357391343964, 0.043032792587409, 0.04423077592518099, 0.04544637347443348, 0.046679652615848055, 0.04793068206187323, 0.04919953187816517, 0.05048627350562718, 0.05179097978306402, 0.05311372497047295, 0.054454584772986814, 0.05581363636549119, 0.05719095841793631, 0.05858663112136431, 0.06000073621467361, 0.06143335701214636, 0.06288457843175832, 0.06435448702430169, 0.06584317100334136, 0.06735072027603661, 0.0688772264748524, 0.07042278299019222, 0.07198748500398144, 0.07357142952423346, 0.07517471542063181, 0.07679744346116169, 0.07843971634982838, 0.08010163876549758, 0.08178331740189904, 0.08348486100883157, 0.08520638043461404, 0.0869479886698239, 0.08870980089237201, 0.09049193451395887, 0.09229450922796456, 0.09411764705882308, 0.09596147241293695, 0.09782611213118841, 0.09971169554310577, 0.10161835452274937, 0.10354622354638077, 0.10549543975198239, 0.10746614300070201, 0.10945847594029179, 0.11147258407062499, 0.1135086158113674, 0.11556672257189271, 0.11764705882352877, 0.11974978217422994, 0.12187505344577387, 0.12402303675358595, 0.1261938995892985, 0.1283878129061613, 0.13060495120741966, 0.13284549263778722, 0.13510961907814534, 0.13739751624360586, 0.1397093737850852, 0.1420453853945418, 0.14440574891403646, 0.1467906664487888, 0.1492003444844061, 0.15163499400847225, 0.1540948306366977, 0.15658007474383817, 0.1590909515996023, 0.16162769150978284, 0.1641905299628572, 0.16677970778231554, 0.16939547128499355, 0.17203807244569957, 0.1747077690684421, 0.17740482496458598, 0.18012951013827838, 0.1828821009795123, 0.18566288046521384, 0.1884721383687621, 0.19131017147838003, 0.194177283824857, 0.19707378691909472, 0.19999999999999873, 0.20295625029327213, 0.20594287328170113, 0.20896021298756384, 0.2120086222678318, 0.21508846312288088, 0.2182001070194739, 0.22134393522883067, 0.22452033918065584, 0.22772972083405452, 0.23097249306633394, 0.23424908008075318, 0.2375599178343678, 0.24090545448719003, 0.24428615087398076, 0.24770248100008452, 0.2511549325628212, 0.2546440075000683, 0.258170222567789, 0.2617341099483942, 0.2653362178919829, 0.2689771113926577, 0.27265737290229586, 0.27637760308434534, 0.28013842161042846, 0.28394046800276895, 0.28778440252570836, 0.2916709071298629, 0.2956006864527758, 0.2995744688802595, 0.30359300767299824, 0.3076570821633897, 0.31176749902806655, 0.3159250936420387, 0.3201307315209597, 0.3243853098586461, 0.3286897591676632, 0.3330450450315682, 0.3374521699782602, 0.34191217548484465, 0.3464261441254983, 0.35099520187502586, 0.35562052058215476, 0.36030332062813675, 0.36504487378794714, 0.36984650631331106, 0.3747096022589854, 0.3796356070762176, 0.3846260315001372, 0.3896824557610623, 0.3948065341533953, 0.3999999999999968, 0.40526467105477704, 0.4106024553918115, 0.41601535783572097, 0.42150548699549373, 0.4270750629725557, 0.4327264258239403, 0.43846204487313356, 0.44428452897490434, 0.4501966378565646, 0.4562012946771501, 0.4623015999685416, 0.46850084714933626, 0.47480253983424814, 0.4812104112001281, 0.4877284457158252, 0.49436090359891205, 0.5011123484301365, 0.5079876784393722, 0.5149921620787308, 0.5221314786244544, 0.5294117647058774, 0.5368396678559104, 0.5444224084248541, 0.5521678515135409, 0.5600845909841463, 0.5681820481265581, 0.5764705882352883, 0.5849616592429661, 0.5936679577415273, 0.6026036293163572, 0.6117845122897319, 0.62122843696667, 0.6309555966739193, 0.6409890128576923, 0.651355125162457, 0.6620845502036374, 0.6732130720627421, 0.6847829574257389, 0.6968447358417524, 0.7094596636550261, 0.7227032230640886, 0.7366702436988197, 0.7514826742312847, 0.7673019027584689, 0.7843493790608879, 0.8029436152721243, 0.8235729901301478, 0.8470588235293918, 0.875000961172452, 0.9115253790377811, 0.9999999211504664]
  const valscurveExpDown = [0.9999999211504664, 0.9115253790377811, 0.875000961172452, 0.8470588235293918, 0.8235729901301478, 0.8029436152721243, 0.7843493790608879, 0.7673019027584689, 0.7514826742312847, 0.7366702436988197, 0.7227032230640886, 0.7094596636550261, 0.6968447358417524, 0.6847829574257389, 0.6732130720627421, 0.6620845502036374, 0.651355125162457, 0.6409890128576923, 0.6309555966739193, 0.62122843696667, 0.6117845122897319, 0.6026036293163572, 0.5936679577415273, 0.5849616592429661, 0.5764705882352883, 0.5681820481265581, 0.5600845909841463, 0.5521678515135409, 0.5444224084248541, 0.5368396678559104, 0.5294117647058774, 0.5221314786244544, 0.5149921620787308, 0.5079876784393722, 0.5011123484301365, 0.49436090359891205, 0.4877284457158252, 0.4812104112001281, 0.47480253983424814, 0.46850084714933626, 0.4623015999685416, 0.4562012946771501, 0.4501966378565646, 0.44428452897490434, 0.43846204487313356, 0.4327264258239403, 0.4270750629725557, 0.42150548699549373, 0.41601535783572097, 0.4106024553918115, 0.40526467105477704, 0.3999999999999968, 0.3948065341533953, 0.3896824557610623, 0.3846260315001372, 0.3796356070762176, 0.3747096022589854, 0.36984650631331106, 0.36504487378794714, 0.36030332062813675, 0.35562052058215476, 0.35099520187502586, 0.3464261441254983, 0.34191217548484465, 0.3374521699782602, 0.3330450450315682, 0.3286897591676632, 0.3243853098586461, 0.3201307315209597, 0.3159250936420387, 0.31176749902806655, 0.3076570821633897, 0.30359300767299824, 0.2995744688802595, 0.2956006864527758, 0.2916709071298629, 0.28778440252570836, 0.28394046800276895, 0.28013842161042846, 0.27637760308434534, 0.27265737290229586, 0.2689771113926577, 0.2653362178919829, 0.2617341099483942, 0.258170222567789, 0.2546440075000683, 0.2511549325628212, 0.24770248100008452, 0.24428615087398076, 0.24090545448719003, 0.2375599178343678, 0.23424908008075318, 0.23097249306633394, 0.22772972083405452, 0.22452033918065584, 0.22134393522883067, 0.2182001070194739, 0.21508846312288088, 0.2120086222678318, 0.20896021298756384, 0.20594287328170113, 0.20295625029327213, 0.19999999999999873, 0.19707378691909472, 0.194177283824857, 0.19131017147838003, 0.1884721383687621, 0.18566288046521384, 0.1828821009795123, 0.18012951013827838, 0.17740482496458598, 0.1747077690684421, 0.17203807244569957, 0.16939547128499355, 0.16677970778231554, 0.1641905299628572, 0.16162769150978284, 0.1590909515996023, 0.15658007474383817, 0.1540948306366977, 0.15163499400847225, 0.1492003444844061, 0.1467906664487888, 0.14440574891403646, 0.1420453853945418, 0.1397093737850852, 0.13739751624360586, 0.13510961907814534, 0.13284549263778722, 0.13060495120741966, 0.1283878129061613, 0.1261938995892985, 0.12402303675358595, 0.12187505344577387, 0.11974978217422994, 0.11764705882352877, 0.11556672257189271, 0.1135086158113674, 0.11147258407062499, 0.10945847594029179, 0.10746614300070201, 0.10549543975198239, 0.10354622354638077, 0.10161835452274937, 0.09971169554310577, 0.09782611213118841, 0.09596147241293695, 0.09411764705882308, 0.09229450922796456, 0.09049193451395887, 0.08870980089237201, 0.0869479886698239, 0.08520638043461404, 0.08348486100883157, 0.08178331740189904, 0.08010163876549758, 0.07843971634982838, 0.07679744346116169, 0.07517471542063181, 0.07357142952423346, 0.07198748500398144, 0.07042278299019222, 0.0688772264748524, 0.06735072027603661, 0.06584317100334136, 0.06435448702430169, 0.06288457843175832, 0.06143335701214636, 0.06000073621467361, 0.05858663112136431, 0.05719095841793631, 0.05581363636549119, 0.054454584772986814, 0.05311372497047295, 0.05179097978306402, 0.05048627350562718, 0.04919953187816517, 0.04793068206187323, 0.046679652615848055, 0.04544637347443348, 0.04423077592518099, 0.043032792587409, 0.041852357391343964, 0.040689405557826186, 0.03954387357856404, 0.038415699196923114, 0.03730482138923363, 0.036211180346602534, 0.035134717457217635, 0.03407537528912874, 0.03303309757349371, 0.03200782918827927, 0.03099951614239982, 0.0300081055602891, 0.029033545666887872, 0.028075785773040707, 0.02713477626129046, 0.026210468572059997, 0.025302815190212602, 0.024411769631980884, 0.023537286432256166, 0.022679321132229036, 0.02183783026737318, 0.021012771355764848, 0.020204102886728692, 0.019411784309804836, 0.018635776024027995, 0.01787603936751292, 0.0171325366073386, 0.016405230929725456, 0.0156940864304993, 0.014999068105835622, 0.014320141843278122, 0.013657274413026776, 0.013010433459490267, 0.012379587493095756, 0.0117647058823529, 0.011165758846166551, 0.010582717446393497, 0.01001555358063877, 0.009464239975287225, 0.008928750178766265, 0.008409058555036264, 0.00790514027730349, 0.007416971321952959, 0.006944528462698107, 0.006487789264942312, 0.006046732080350448, 0.005621336041626401, 0.005211581057494419, 0.004817447807880737, 0.004438917739292725, 0.004075973060393756, 0.003728596737769929, 0.0033967724918884112, 0.0030804847932421886, 0.002779718858682001, 0.0024944606479309073, 0.0022246968602822603, 0.0019704149314765385, 0.001731603030756479, 0.001508250058100069, 0.0013003456416276205, 0.001107880135183148, 0.0009308446160880557, 0.0007692308830661299, 0.0006230314543387294, 0.0004922395658889522, 0.0003768491698936671, 0.00027685493332363365, 0.00019225223670882308, 0.00012303717307138307, 0.00006920654702224915, 0.00003075787402306851, 0.000007689379813213826, 0]

  const valsCurveRootUp = [0, 0.08847462096218382, 0.12499903882752314, 0.1529411764705879, 0.17642700986983487, 0.1970563847278602, 0.215650620939098, 0.23269809724151794, 0.24851732576870328, 0.26332975630116884, 0.27729677693590055, 0.2905403363449635, 0.3031552641582378, 0.31521704257425176, 0.32678692793724906, 0.3379154497963541, 0.34864487483753454, 0.35901098714229973, 0.3690444033260728, 0.3787715630333224, 0.3882154877102607, 0.3973963706836355, 0.4063320422584658, 0.41503834075702717, 0.4235294117647052, 0.4318179518734354, 0.4399154090158473, 0.44783214848645286, 0.45557759157513983, 0.46316033214408353, 0.47058823529411686, 0.4778685213755398, 0.4850078379212637, 0.4920123215606224, 0.49888765156985804, 0.5056390964010825, 0.5122715542841696, 0.5187895887998668, 0.5251974601657468, 0.5314991528506589, 0.5376984000314535, 0.5437987053228451, 0.5498033621434308, 0.555715471025091, 0.5615379551268618, 0.5672735741760553, 0.5729249370274399, 0.5784945130045018, 0.5839846421642746, 0.5893975446081842, 0.5947353289452187, 0.5999999999999991, 0.6051934658466006, 0.6103175442389336, 0.6153739684998588, 0.6203643929237784, 0.6252903977410107, 0.630153493686685, 0.6349551262120491, 0.6396966793718595, 0.6443794794178415, 0.6490047981249704, 0.6535738558744981, 0.6580878245151518, 0.6625478300217362, 0.6669549549684284, 0.6713102408323334, 0.6756146901413504, 0.679869268479037, 0.6840749063579581, 0.6882325009719301, 0.6923429178366071, 0.6964069923269985, 0.7004255311197373, 0.7043993135472212, 0.708329092870134, 0.7122155974742886, 0.7160595319972279, 0.7198615783895685, 0.7236223969156518, 0.7273426270977011, 0.7310228886073393, 0.7346637821080142, 0.7382658900516029, 0.7418297774322081, 0.7453559924999289, 0.748845067437176, 0.7522975189999126, 0.7557138491260165, 0.7590945455128074, 0.7624400821656295, 0.7657509199192442, 0.7690275069336635, 0.7722702791659428, 0.7754796608193417, 0.7786560647711668, 0.7817998929805237, 0.7849115368771167, 0.7879913777321658, 0.7910397870124337, 0.7940571267182965, 0.7970437497067255, 0.7999999999999989, 0.8029262130809031, 0.8058227161751408, 0.8086898285216177, 0.8115278616312358, 0.8143371195347839, 0.8171178990204855, 0.8198704898617195, 0.8225951750354119, 0.8252922309315558, 0.8279619275542984, 0.8306045287150043, 0.8332202922176823, 0.8358094700371407, 0.838372308490215, 0.8409090484003958, 0.8434199252561598, 0.8459051693633003, 0.8483650059915258, 0.850799655515592, 0.8532093335512092, 0.8555942510859617, 0.8579546146054563, 0.8602906262149129, 0.8626024837563924, 0.8648903809218529, 0.867154507362211, 0.8693950487925786, 0.871612187093837, 0.8738061004106998, 0.8759769632464124, 0.8781249465542244, 0.8802502178257684, 0.8823529411764696, 0.8844332774281056, 0.8864913841886309, 0.8885274159293733, 0.8905415240597065, 0.8925338569992964, 0.894504560248016, 0.8964537764536178, 0.8983816454772491, 0.9002883044568927, 0.90217388786881, 0.9040385275870615, 0.9058823529411755, 0.907705490772034, 0.9095080654860397, 0.9112901991076265, 0.9130520113301748, 0.9147936195653846, 0.9165151389911671, 0.9182166825980996, 0.9198983612345011, 0.9215602836501703, 0.923202556538837, 0.924825284579367, 0.9264285704757652, 0.9280125149960173, 0.9295772170098066, 0.9311227735251464, 0.9326492797239622, 0.9341568289966574, 0.9356455129756972, 0.9371154215682405, 0.9385666429878525, 0.9399992637853253, 0.9414133688786346, 0.9428090415820625, 0.9441863636345077, 0.9455454152270122, 0.9468862750295259, 0.948209020216935, 0.9495137264943718, 0.9508004681218337, 0.9520693179381258, 0.953320347384151, 0.9545536265255655, 0.9557692240748181, 0.9569672074125901, 0.958147642608655, 0.9593105944421729, 0.9604561264214351, 0.961584300803076, 0.9626951786107656, 0.9637888196533967, 0.9648652825427815, 0.9659246247108705, 0.9669669024265054, 0.96799217081172, 0.9690004838575994, 0.96999189443971, 0.9709664543331114, 0.9719242142269585, 0.9728652237387088, 0.9737895314279392, 0.9746971848097866, 0.9755882303680183, 0.9764627135677431, 0.9773206788677703, 0.978162169732626, 0.9789872286442345, 0.9797958971132706, 0.9805882156901945, 0.9813642239759713, 0.9821239606324864, 0.9828674633926608, 0.983594769070274, 0.9843059135695001, 0.9850009318941638, 0.9856798581567214, 0.9863427255869727, 0.9869895665405092, 0.9876204125069037, 0.9882352941176467, 0.988834241153833, 0.9894172825536061, 0.9899844464193608, 0.9905357600247123, 0.9910712498212333, 0.9915909414449632, 0.9920948597226961, 0.9925830286780466, 0.9930554715373016, 0.9935122107350574, 0.9939532679196492, 0.9943786639583733, 0.9947884189425052, 0.9951825521921189, 0.9955610822607069, 0.995924026939606, 0.9962714032622298, 0.9966032275081113, 0.9969195152067575, 0.9972202811413178, 0.9975055393520689, 0.9977753031397175, 0.9980295850685234, 0.9982683969692434, 0.9984917499418998, 0.9986996543583723, 0.9988921198648167, 0.9990691553839118, 0.9992307691169338, 0.9993769685456612, 0.9995077604341109, 0.9996231508301062, 0.9997231450666764, 0.9998077477632911, 0.9998769628269285, 0.9999307934529778, 0.9999692421259769, 0.9999923106201868, 1]
  const valsCurveRootDown = [1, 0.9999923106201868, 0.9999692421259769, 0.9999307934529778, 0.9998769628269285, 0.9998077477632911, 0.9997231450666764, 0.9996231508301062, 0.9995077604341109, 0.9993769685456612, 0.9992307691169338, 0.9990691553839118, 0.9988921198648167, 0.9986996543583723, 0.9984917499418998, 0.9982683969692434, 0.9980295850685234, 0.9977753031397175, 0.9975055393520689, 0.9972202811413178, 0.9969195152067575, 0.9966032275081113, 0.9962714032622298, 0.995924026939606, 0.9955610822607069, 0.9951825521921189, 0.9947884189425052, 0.9943786639583733, 0.9939532679196492, 0.9935122107350574, 0.9930554715373016, 0.9925830286780466, 0.9920948597226961, 0.9915909414449632, 0.9910712498212333, 0.9905357600247123, 0.9899844464193608, 0.9894172825536061, 0.988834241153833, 0.9882352941176467, 0.9876204125069037, 0.9869895665405092, 0.9863427255869727, 0.9856798581567214, 0.9850009318941638, 0.9843059135695001, 0.983594769070274, 0.9828674633926608, 0.9821239606324864, 0.9813642239759713, 0.9805882156901945, 0.9797958971132706, 0.9789872286442345, 0.978162169732626, 0.9773206788677703, 0.9764627135677431, 0.9755882303680183, 0.9746971848097866, 0.9737895314279392, 0.9728652237387088, 0.9719242142269585, 0.9709664543331114, 0.96999189443971, 0.9690004838575994, 0.96799217081172, 0.9669669024265054, 0.9659246247108705, 0.9648652825427815, 0.9637888196533967, 0.9626951786107656, 0.961584300803076, 0.9604561264214351, 0.9593105944421729, 0.958147642608655, 0.9569672074125901, 0.9557692240748181, 0.9545536265255655, 0.953320347384151, 0.9520693179381258, 0.9508004681218337, 0.9495137264943718, 0.948209020216935, 0.9468862750295259, 0.9455454152270122, 0.9441863636345077, 0.9428090415820625, 0.9414133688786346, 0.9399992637853253, 0.9385666429878525, 0.9371154215682405, 0.9356455129756972, 0.9341568289966574, 0.9326492797239622, 0.9311227735251464, 0.9295772170098066, 0.9280125149960173, 0.9264285704757652, 0.924825284579367, 0.923202556538837, 0.9215602836501703, 0.9198983612345011, 0.9182166825980996, 0.9165151389911671, 0.9147936195653846, 0.9130520113301748, 0.9112901991076265, 0.9095080654860397, 0.907705490772034, 0.9058823529411755, 0.9040385275870615, 0.90217388786881, 0.9002883044568927, 0.8983816454772491, 0.8964537764536178, 0.894504560248016, 0.8925338569992964, 0.8905415240597065, 0.8885274159293733, 0.8864913841886309, 0.8844332774281056, 0.8823529411764696, 0.8802502178257684, 0.8781249465542244, 0.8759769632464124, 0.8738061004106998, 0.871612187093837, 0.8693950487925786, 0.867154507362211, 0.8648903809218529, 0.8626024837563924, 0.8602906262149129, 0.8579546146054563, 0.8555942510859617, 0.8532093335512092, 0.850799655515592, 0.8483650059915258, 0.8459051693633003, 0.8434199252561598, 0.8409090484003958, 0.838372308490215, 0.8358094700371407, 0.8332202922176823, 0.8306045287150043, 0.8279619275542984, 0.8252922309315558, 0.8225951750354119, 0.8198704898617195, 0.8171178990204855, 0.8143371195347839, 0.8115278616312358, 0.8086898285216177, 0.8058227161751408, 0.8029262130809031, 0.7999999999999989, 0.7970437497067255, 0.7940571267182965, 0.7910397870124337, 0.7879913777321658, 0.7849115368771167, 0.7817998929805237, 0.7786560647711668, 0.7754796608193417, 0.7722702791659428, 0.7690275069336635, 0.7657509199192442, 0.7624400821656295, 0.7590945455128074, 0.7557138491260165, 0.7522975189999126, 0.748845067437176, 0.7453559924999289, 0.7418297774322081, 0.7382658900516029, 0.7346637821080142, 0.7310228886073393, 0.7273426270977011, 0.7236223969156518, 0.7198615783895685, 0.7160595319972279, 0.7122155974742886, 0.708329092870134, 0.7043993135472212, 0.7004255311197373, 0.6964069923269985, 0.6923429178366071, 0.6882325009719301, 0.6840749063579581, 0.679869268479037, 0.6756146901413504, 0.6713102408323334, 0.6669549549684284, 0.6625478300217362, 0.6580878245151518, 0.6535738558744981, 0.6490047981249704, 0.6443794794178415, 0.6396966793718595, 0.6349551262120491, 0.630153493686685, 0.6252903977410107, 0.6203643929237784, 0.6153739684998588, 0.6103175442389336, 0.6051934658466006, 0.5999999999999991, 0.5947353289452187, 0.5893975446081842, 0.5839846421642746, 0.5784945130045018, 0.5729249370274399, 0.5672735741760553, 0.5615379551268618, 0.555715471025091, 0.5498033621434308, 0.5437987053228451, 0.5376984000314535, 0.5314991528506589, 0.5251974601657468, 0.5187895887998668, 0.5122715542841696, 0.5056390964010825, 0.49888765156985804, 0.4920123215606224, 0.4850078379212637, 0.4778685213755398, 0.47058823529411686, 0.46316033214408353, 0.45557759157513983, 0.44783214848645286, 0.4399154090158473, 0.4318179518734354, 0.4235294117647052, 0.41503834075702717, 0.4063320422584658, 0.3973963706836355, 0.3882154877102607, 0.3787715630333224, 0.3690444033260728, 0.35901098714229973, 0.34864487483753454, 0.3379154497963541, 0.32678692793724906, 0.31521704257425176, 0.3031552641582378, 0.2905403363449635, 0.27729677693590055, 0.26332975630116884, 0.24851732576870328, 0.23269809724151794, 0.215650620939098, 0.1970563847278602, 0.17642700986983487, 0.1529411764705879, 0.12499903882752314, 0.08847462096218382, 0]

  const valsCurveRootMidUp = [0.5, 0.5442373104810919, 0.5624995194137615, 0.576470588235294, 0.5882135049349174, 0.5985281923639301, 0.607825310469549, 0.616349048620759, 0.6242586628843516, 0.6316648781505845, 0.6386483884679502, 0.6452701681724817, 0.6515776320791189, 0.6576085212871259, 0.6633934639686245, 0.6689577248981771, 0.6743224374187673, 0.6795054935711499, 0.6845222016630363, 0.6893857815166612, 0.6941077438551304, 0.6986981853418177, 0.7031660211292329, 0.7075191703785135, 0.7117647058823526, 0.7159089759367177, 0.7199577045079236, 0.7239160742432265, 0.7277887957875699, 0.7315801660720418, 0.7352941176470584, 0.7389342606877699, 0.7425039189606318, 0.7460061607803112, 0.749443825784929, 0.7528195482005413, 0.7561357771420848, 0.7593947943999334, 0.7625987300828734, 0.7657495764253295, 0.7688492000157268, 0.7718993526614226, 0.7749016810717154, 0.7778577355125456, 0.7807689775634309, 0.7836367870880276, 0.7864624685137199, 0.7892472565022509, 0.7919923210821374, 0.7946987723040921, 0.7973676644726093, 0.7999999999999996, 0.8025967329233004, 0.8051587721194668, 0.8076869842499295, 0.8101821964618892, 0.8126451988705053, 0.8150767468433425, 0.8174775631060245, 0.8198483396859297, 0.8221897397089207, 0.8245023990624851, 0.8267869279372491, 0.8290439122575759, 0.8312739150108681, 0.8334774774842142, 0.8356551204161666, 0.8378073450706752, 0.8399346342395184, 0.842037453178979, 0.8441162504859651, 0.8461714589183036, 0.8482034961634992, 0.8502127655598686, 0.8521996567736105, 0.854164546435067, 0.8561077987371444, 0.858029765998614, 0.8599307891947843, 0.8618111984578258, 0.8636713135488505, 0.8655114443036697, 0.8673318910540071, 0.8691329450258014, 0.870914888716104, 0.8726779962499644, 0.874422533718588, 0.8761487594999563, 0.8778569245630082, 0.8795472727564038, 0.8812200410828148, 0.882875459959622, 0.8845137534668317, 0.8861351395829714, 0.8877398304096709, 0.8893280323855834, 0.8908999464902618, 0.8924557684385583, 0.8939956888660829, 0.8955198935062169, 0.8970285633591483, 0.8985218748533628, 0.8999999999999995, 0.9014631065404515, 0.9029113580875704, 0.9043449142608089, 0.9057639308156179, 0.907168559767392, 0.9085589495102427, 0.9099352449308598, 0.911297587517706, 0.9126461154657779, 0.9139809637771492, 0.9153022643575022, 0.9166101461088412, 0.9179047350185703, 0.9191861542451075, 0.9204545242001979, 0.9217099626280799, 0.9229525846816502, 0.9241825029957629, 0.925399827757796, 0.9266046667756046, 0.9277971255429809, 0.9289773073027281, 0.9301453131074564, 0.9313012418781962, 0.9324451904609264, 0.9335772536811056, 0.9346975243962893, 0.9358060935469186, 0.9369030502053499, 0.9379884816232062, 0.9390624732771122, 0.9401251089128841, 0.9411764705882348, 0.9422166387140528, 0.9432456920943155, 0.9442637079646867, 0.9452707620298533, 0.9462669284996482, 0.947252280124008, 0.9482268882268089, 0.9491908227386245, 0.9501441522284464, 0.951086943934405, 0.9520192637935307, 0.9529411764705877, 0.953852745386017, 0.9547540327430198, 0.9556450995538133, 0.9565260056650874, 0.9573968097826924, 0.9582575694955835, 0.9591083412990498, 0.9599491806172505, 0.9607801418250852, 0.9616012782694185, 0.9624126422896835, 0.9632142852378827, 0.9640062574980086, 0.9647886085049033, 0.9655613867625732, 0.9663246398619811, 0.9670784144983287, 0.9678227564878485, 0.9685577107841202, 0.9692833214939263, 0.9699996318926627, 0.9707066844393173, 0.9714045207910312, 0.9720931818172538, 0.9727727076135061, 0.973443137514763, 0.9741045101084675, 0.9747568632471859, 0.9754002340609169, 0.9760346589690629, 0.9766601736920755, 0.9772768132627827, 0.9778846120374091, 0.9784836037062951, 0.9790738213043275, 0.9796552972210865, 0.9802280632107175, 0.980792150401538, 0.9813475893053828, 0.9818944098266984, 0.9824326412713907, 0.9829623123554352, 0.9834834512132526, 0.98399608540586, 0.9845002419287997, 0.9849959472198551, 0.9854832271665557, 0.9859621071134792, 0.9864326118693544, 0.9868947657139696, 0.9873485924048933, 0.9877941151840092, 0.9882313567838715, 0.9886603394338851, 0.989081084866313, 0.9894936143221172, 0.9898979485566353, 0.9902941078450973, 0.9906821119879856, 0.9910619803162433, 0.9914337316963304, 0.991797384535137, 0.99215295678475, 0.992500465947082, 0.9928399290783607, 0.9931713627934864, 0.9934947832702545, 0.9938102062534518, 0.9941176470588233, 0.9944171205769166, 0.994708641276803, 0.9949922232096804, 0.9952678800123562, 0.9955356249106166, 0.9957954707224816, 0.996047429861348, 0.9962915143390233, 0.9965277357686508, 0.9967561053675287, 0.9969766339598246, 0.9971893319791867, 0.9973942094712527, 0.9975912760960595, 0.9977805411303535, 0.9979620134698031, 0.998135701631115, 0.9983016137540557, 0.9984597576033787, 0.9986101405706589, 0.9987527696760344, 0.9988876515698588, 0.9990147925342616, 0.9991341984846217, 0.9992458749709499, 0.9993498271791861, 0.9994460599324084, 0.999534577691956, 0.9996153845584669, 0.9996884842728306, 0.9997538802170555, 0.9998115754150532, 0.9998615725333382, 0.9999038738816455, 0.9999384814134642, 0.9999653967264889, 0.9999846210629885, 0.9999961553100933, 1]
  const valsCurveRootMidDown = [1, 0.9999961553100933, 0.9999846210629885, 0.9999653967264889, 0.9999384814134642, 0.9999038738816455, 0.9998615725333382, 0.9998115754150532, 0.9997538802170555, 0.9996884842728306, 0.9996153845584669, 0.999534577691956, 0.9994460599324084, 0.9993498271791861, 0.9992458749709499, 0.9991341984846217, 0.9990147925342616, 0.9988876515698588, 0.9987527696760344, 0.9986101405706589, 0.9984597576033787, 0.9983016137540557, 0.998135701631115, 0.9979620134698031, 0.9977805411303535, 0.9975912760960595, 0.9973942094712527, 0.9971893319791867, 0.9969766339598246, 0.9967561053675287, 0.9965277357686508, 0.9962915143390233, 0.996047429861348, 0.9957954707224816, 0.9955356249106166, 0.9952678800123562, 0.9949922232096804, 0.994708641276803, 0.9944171205769166, 0.9941176470588233, 0.9938102062534518, 0.9934947832702545, 0.9931713627934864, 0.9928399290783607, 0.992500465947082, 0.99215295678475, 0.991797384535137, 0.9914337316963304, 0.9910619803162433, 0.9906821119879856, 0.9902941078450973, 0.9898979485566353, 0.9894936143221172, 0.989081084866313, 0.9886603394338851, 0.9882313567838715, 0.9877941151840092, 0.9873485924048933, 0.9868947657139696, 0.9864326118693544, 0.9859621071134792, 0.9854832271665557, 0.9849959472198551, 0.9845002419287997, 0.98399608540586, 0.9834834512132526, 0.9829623123554352, 0.9824326412713907, 0.9818944098266984, 0.9813475893053828, 0.980792150401538, 0.9802280632107175, 0.9796552972210865, 0.9790738213043275, 0.9784836037062951, 0.9778846120374091, 0.9772768132627827, 0.9766601736920755, 0.9760346589690629, 0.9754002340609169, 0.9747568632471859, 0.9741045101084675, 0.973443137514763, 0.9727727076135061, 0.9720931818172538, 0.9714045207910312, 0.9707066844393173, 0.9699996318926627, 0.9692833214939263, 0.9685577107841202, 0.9678227564878485, 0.9670784144983287, 0.9663246398619811, 0.9655613867625732, 0.9647886085049033, 0.9640062574980086, 0.9632142852378827, 0.9624126422896835, 0.9616012782694185, 0.9607801418250852, 0.9599491806172505, 0.9591083412990498, 0.9582575694955835, 0.9573968097826924, 0.9565260056650874, 0.9556450995538133, 0.9547540327430198, 0.953852745386017, 0.9529411764705877, 0.9520192637935307, 0.951086943934405, 0.9501441522284464, 0.9491908227386245, 0.9482268882268089, 0.947252280124008, 0.9462669284996482, 0.9452707620298533, 0.9442637079646867, 0.9432456920943155, 0.9422166387140528, 0.9411764705882348, 0.9401251089128841, 0.9390624732771122, 0.9379884816232062, 0.9369030502053499, 0.9358060935469186, 0.9346975243962893, 0.9335772536811056, 0.9324451904609264, 0.9313012418781962, 0.9301453131074564, 0.9289773073027281, 0.9277971255429809, 0.9266046667756046, 0.925399827757796, 0.9241825029957629, 0.9229525846816502, 0.9217099626280799, 0.9204545242001979, 0.9191861542451075, 0.9179047350185703, 0.9166101461088412, 0.9153022643575022, 0.9139809637771492, 0.9126461154657779, 0.911297587517706, 0.9099352449308598, 0.9085589495102427, 0.907168559767392, 0.9057639308156179, 0.9043449142608089, 0.9029113580875704, 0.9014631065404515, 0.8999999999999995, 0.8985218748533628, 0.8970285633591483, 0.8955198935062169, 0.8939956888660829, 0.8924557684385583, 0.8908999464902618, 0.8893280323855834, 0.8877398304096709, 0.8861351395829714, 0.8845137534668317, 0.882875459959622, 0.8812200410828148, 0.8795472727564038, 0.8778569245630082, 0.8761487594999563, 0.874422533718588, 0.8726779962499644, 0.870914888716104, 0.8691329450258014, 0.8673318910540071, 0.8655114443036697, 0.8636713135488505, 0.8618111984578258, 0.8599307891947843, 0.858029765998614, 0.8561077987371444, 0.854164546435067, 0.8521996567736105, 0.8502127655598686, 0.8482034961634992, 0.8461714589183036, 0.8441162504859651, 0.842037453178979, 0.8399346342395184, 0.8378073450706752, 0.8356551204161666, 0.8334774774842142, 0.8312739150108681, 0.8290439122575759, 0.8267869279372491, 0.8245023990624851, 0.8221897397089207, 0.8198483396859297, 0.8174775631060245, 0.8150767468433425, 0.8126451988705053, 0.8101821964618892, 0.8076869842499295, 0.8051587721194668, 0.8025967329233004, 0.7999999999999996, 0.7973676644726093, 0.7946987723040921, 0.7919923210821374, 0.7892472565022509, 0.7864624685137199, 0.7836367870880276, 0.7807689775634309, 0.7778577355125456, 0.7749016810717154, 0.7718993526614226, 0.7688492000157268, 0.7657495764253295, 0.7625987300828734, 0.7593947943999334, 0.7561357771420848, 0.7528195482005413, 0.749443825784929, 0.7460061607803112, 0.7425039189606318, 0.7389342606877699, 0.7352941176470584, 0.7315801660720418, 0.7277887957875699, 0.7239160742432265, 0.7199577045079236, 0.7159089759367177, 0.7117647058823526, 0.7075191703785135, 0.7031660211292329, 0.6986981853418177, 0.6941077438551304, 0.6893857815166612, 0.6845222016630363, 0.6795054935711499, 0.6743224374187673, 0.6689577248981771, 0.6633934639686245, 0.6576085212871259, 0.6515776320791189, 0.6452701681724817, 0.6386483884679502, 0.6316648781505845, 0.6242586628843516, 0.616349048620759, 0.607825310469549, 0.5985281923639301, 0.5882135049349174, 0.576470588235294, 0.5624995194137615, 0.5442373104810919, 0.5]
  
  const valsCurveShadows = [0, 0.00012207776399020265, 0.0004884005175327388, 0.0010992369734619256, 0.001955036083043038, 0.003056428690670576, 0.004404229870375587, 0.0059994419644423536, 0.007843258350778481, 0.009937067972444535, 0.012282460670055784, 0.014881233365742874, 0.01773539715614303, 0.020847185381668853, 0.02421906275025032, 0.027853735606107488, 0.031754163448145745, 0.03592357181860317, 0.0403654667009945, 0.045083650587654844, 0.05008224040183351, 0.05536568748800996, 0.06093879991770501, 0.06680676739755553, 0.07297518911304213, 0.07945010489653526, 0.08623803017415965, 0.09334599522474951, 0.10078158937886506, 0.10855301090025549, 0.11666912343108937, 0.1251395200519113, 0.1339745962155614, 0.1431856330715503, 0.1527848930171276, 0.1627857297113241, 0.17320271529231546, 0.18405178817831824, 0.19535042565101668, 0.20711784647717035, 0.2193752502002002, 0.2321461015433991, 0.2454564707718977, 0.25933544409429177, 0.27381562258610936, 0.28893373418857793, 0.3047313918347816, 0.321256042844579, 0.3385621722338523, 0.35671284843003437, 0.37578173889255695, 0.39585578346308736, 0.417038809181949, 0.43945652766712195, 0.4632636238338229, 0.4886541196264509, 0.5158770817240729, 0.5452614934107736, 0.5772578356728537, 0.6125126010113361, 0.6520147273231236, 0.6974231760775456, 0.7519608145876946, 0.8239151926627399, 0.8980709073397093, 0.856038802488714, 0.8239151926627547, 0.7969417844831592, 0.7732729285450225, 0.7519608145877047, 0.7324416762699816, 0.7143477249832981, 0.6974231760775533, 0.6814815655954101, 0.6663819575264485, 0.6520147273231298, 0.6382925930204295, 0.6251447038448685, 0.6125126010113414, 0.6003473730572784, 0.5886076002194276, 0.5772578356728582, 0.5662674615266319, 0.5556098123395552, 0.5452614934107773, 0.5352018433891057, 0.5254125055055157, 0.5158770817240763, 0.5065808510027008, 0.4975105377003224, 0.4886541196264539, 0.48000066773547434, 0.47154021130848, 0.46326362383382547, 0.4551625258263835, 0.44722920160743573, 0.4394565276671243, 0.4318379106960587, 0.4243672337355875, 0.417038809181951, 0.4098473376061468, 0.4027878715323283, 0.39585578346308914, 0.38904673755770247, 0.3823566644652, 0.3757817388925584, 0.36931835955276104, 0.3629631311908075, 0.3567128484300356, 0.3505644812180705, 0.3445151616826768, 0.33856217223385354, 0.33270293477051205, 0.3269350008687466, 0.32125604284458, 0.3156638455976325, 0.3101562991537714, 0.3047313918347824, 0.2993872039917095, 0.2941219022459417, 0.2889337341885785, 0.2838210234942051, 0.2787821654100928, 0.2738156225861099, 0.26891992121435737, 0.2640936474508312, 0.2593354440942922, 0.25464400750007044, 0.25001808470877884, 0.24545647077189803, 0.2409580062579617, 0.236521574924638, 0.2321461015433992, 0.22783054986471918, 0.22357392071284587, 0.21937525020020032, 0.2152336080523355, 0.2111480960352008, 0.20711784647717035, 0.20314202087894673, 0.19921980860503574, 0.19535042565101668, 0.1915331134813113, 0.18776713793258626, 0.18405178817831813, 0.18038637575040528, 0.17677023361403577, 0.17320271529231512, 0.16968319403742693, 0.1662110620453423, 0.16278572971132388, 0.15940662492366575, 0.15607319239330786, 0.15278489301712717, 0.1495412032728709, 0.146341614643838, 0.14318563307154997, 0.14007277843477384, 0.13700258405337262, 0.13397459621556096, 0.13098837372724237, 0.1280434874821893, 0.12513952005191098, 0.12227606529412893, 0.11945272797884976, 0.11666912343108904, 0.11392487718936073, 0.11121962467910218, 0.10855301090025526, 0.1059246901282741, 0.10333432562787226, 0.10078158937886483, 0.09826616181350056, 0.09578773156471199, 0.09334599522474929, 0.09094065711369026, 0.08857142905735294, 0.08623803017415943, 0.08394018667053049, 0.08167763164440855, 0.07945010489653515, 0.07725735274912338, 0.07509912787159234, 0.07297518911304202, 0.07088530134116966, 0.0688292352873423, 0.06680676739755542, 0.0648176796890233, 0.06286175961215712, 0.06093879991770501, 0.05904859852883171, 0.057190958417936644, 0.05536568748800996, 0.053572598458345055, 0.051811508754427305, 0.05008224040183351, 0.04838461992398302, 0.046718478243587214, 0.045083650587654844, 0.04347997639591694, 0.04190729923253833, 0.0403654667009945, 0.03885433036199515, 0.03737374565433993, 0.03592357181860317, 0.0345036718235423, 0.03311391229513383, 0.031754163448145856, 0.030424299020156198, 0.029124196207934716, 0.027853735606107488, 0.026612801148027776, 0.025401280048780506, 0.02421906275025032, 0.023066042868187475, 0.021942117141208195, 0.020847185381668853, 0.01978115042835682, 0.018743918100943002, 0.01773539715614303, 0.016755499245539207, 0.01580413887501253, 0.014881233365742874, 0.013986702816730645, 0.013120470068802015, 0.012282460670055784, 0.011472602842715562, 0.010690827451352858, 0.009937067972444535, 0.009211260465234683, 0.008513343543870233, 0.007843258350778481, 0.007200948531263851, 0.0065863602092921525, 0.0059994419644423536, 0.0054401448099991034, 0.004908422172165694, 0.004404229870375587, 0.00392752609868352, 0.003478271408216771, 0.003056428690670576, 0.002661963162829073, 0.0022948423520994243, 0.001955036083043038, 0.0016425164648908863, 0.0013572578800320478, 0.0010992369734619256, 0.000868432643183481, 0.0006648260315482712, 0.0004884005175327388, 0.00033914170993865067, 0.0002170374415143561, 0.00012207776399020265, 0.00005425494402166997, 0.000013563460039334174, 0]

  const valsCurveGrayUp = [0, 0.049067674327418015, 0.0980171403295606, 0.14673047445536175, 0.19509032201612825, 0.24298017990326387, 0.29028467725446233, 0.33688985339222005, 0.3826834323650898, 0.4275550934302821, 0.47139673682599764, 0.5141027441932218, 0.5555702330196022, 0.5956993044924334, 0.6343932841636455, 0.6715589548470184, 0.7071067811865475, 0.7409511253549591, 0.7730104533627369, 0.8032075314806449, 0.8314696123025452, 0.8577286100002721, 0.881921264348355, 0.9039892931234433, 0.9238795325112867, 0.9415440651830208, 0.9569403357322089, 0.970031253194544, 0.9807852804032304, 0.989176509964781, 0.9951847266721969, 0.9987954562051724, 1, 0.9999751916296507, 0.9999007677495129, 0.999776732052257, 0.9996030906921302, 0.9993798522846508, 0.9991070279061809, 0.9987846310933769, 0.998412677842518, 0.9979911866087121, 0.9975201783049804, 0.99699967630122, 0.9964297064230436, 0.995810296950499, 0.9951414786166655, 0.9944232846061286, 0.9936557505533347, 0.9928389145408214, 0.9919728170973298, 0.9910575011957918, 0.9900930122511994, 0.9890793981183503, 0.9880167090894743, 0.9869049978917371, 0.9857443196846253, 0.9845347320572082, 0.9832762950252816, 0.9819690710283894, 0.9806131249267257, 0.9792085239979166, 0.9777553379336822, 0.9762536388363786, 0.9747035012154205, 0.9731050019835844, 0.9714582204531921, 0.9697632383321757, 0.9680201397200238, 0.966229011103608, 0.9643899413528927, 0.9625030217165246, 0.9605683458173062, 0.9585860096475498, 0.9565561115643152, 0.9544787522845292, 0.9523540348799885, 0.9501820647722455, 0.9479629497273782, 0.9456967998506421, 0.943383727581008, 0.941023847685583, 0.9386172772539161, 0.936164135692188, 0.9336645447172878, 0.9311186283507725, 0.9285265129127147, 0.9258883270154336, 0.9232042015571147, 0.9204742697153152, 0.9176986669403552, 0.9148775309485979, 0.9120110017156163, 0.9090992214692483, 0.9061423346825389, 0.9031404880665733, 0.9000938305631968, 0.8970025133376245, 0.8938666897709417, 0.8906865154524932, 0.8874621481721635, 0.884193747912548, 0.8808814768410147, 0.8775254993016587, 0.8741259818071471, 0.870683093030458, 0.8671970037965111, 0.863667887073692, 0.8600959179652701, 0.8564812737007104, 0.85282413362688, 0.8491246791991497, 0.8453830939723906, 0.8415995635918666, 0.8377742757840237, 0.833907420347175, 0.8299991891420841, 0.8260497760824452, 0.8220593771252621, 0.8180281902611252, 0.8139564155043877, 0.8098442548832419, 0.8056919124296951, 0.8014995941694462, 0.797267508111663, 0.7929958642386623, 0.7886848744954904, 0.7843347527794076, 0.7799457149292749, 0.7755179787148454, 0.7710517638259587, 0.7665472918616408, 0.7620047863191094, 0.7574244725826837, 0.7528065779126031, 0.7481513314337497, 0.743458964124281, 0.7387297088041691, 0.7339638001236489, 0.7291614745515758, 0.7243229703636922, 0.7194485276308057, 0.7145383882068777, 0.7095927957170226, 0.7046119955454205, 0.6995962348231424, 0.694545762415887, 0.6894608289116343, 0.6843416866082115, 0.6791885895007749, 0.6740017932692074, 0.6687815552654326, 0.6635281345006462, 0.6582417916324638, 0.6529227889519886, 0.6475713903707978, 0.642187861407847, 0.6367724691762967, 0.6313254823702592, 0.6258471712514663, 0.6203378076358603, 0.614797664880107, 0.6092270178680332, 0.6036261429969871, 0.5979953181641249, 0.5923348227526222, 0.5866449376178121, 0.5809259450732498, 0.5751781288767056, 0.5694017742160854, 0.5635971676952802, 0.5577645973199471, 0.5519043524832177, 0.5460167239513406, 0.5401020038492539, 0.5341604856460913, 0.5281924641406208, 0.5221982354466179, 0.5161780969781734, 0.5101323474349367, 0.5040612867872953, 0.497965216261491, 0.4918444383246744, 0.48569925666989733, 0.4795299762010444, 0.4733369030177049, 0.46712034439998523, 0.46088060879326226, 0.45461800579287975, 0.4483328461287867, 0.44202544165012053, 0.4356961053097337, 0.4293451511486662, 0.42297289428056384, 0.4165796508760433, 0.41016573814700485, 0.4037314743308933, 0.39727717867490775, 0.39080317142016235, 0.3843097737857964, 0.3777973079530364, 0.37126609704921093, 0.3647164651317179, 0.3581487371719459, 0.35156323903915, 0.34496029748428336, 0.3383402401237851, 0.33170339542332467, 0.32505009268150453, 0.31838066201352166, 0.3116954343347882, 0.30499474134451227, 0.29827891550924057, 0.29154829004636207, 0.2848031989075752, 0.2780439767623179, 0.27127095898116266, 0.2644844816191766, 0.25768488139924717, 0.25087249569537534, 0.24404766251593607, 0.2372107204869076, 0.23036200883506977, 0.2235018673711727, 0.21663063647307654, 0.20974865706886306, 0.2028562706199199, 0.19595381910399823, 0.1890416449982451, 0.18212009126221085, 0.17518950132083239, 0.16825021904739368, 0.161302588746464, 0.15434695513681446, 0.14738366333431419, 0.14041305883480704, 0.13343548749696893, 0.12645129552514767, 0.11946082945218531, 0.11246443612222433, 0.10546246267349844, 0.09845525652110863, 0.09144316533978557, 0.08442653704663915, 0.07740571978389599, 0.0703810619016257, 0.06335291194045693, 0.05632161861428389, 0.04928753079296433, 0.042250997485009725, 0.03521236782026864, 0.028171991032604017, 0.02113021644256536, 0.014087393440056564, 0.007043871467000329, 0]
  const valsCurveGrayDown = [0, 0.049067674327418015, 0.0980171403295606, 0.14673047445536175, 0.19509032201612825, 0.24298017990326387, 0.29028467725446233, 0.33688985339222005, 0.3826834323650898, 0.4275550934302821, 0.47139673682599764, 0.5141027441932218, 0.5555702330196022, 0.5956993044924334, 0.6343932841636455, 0.6715589548470184, 0.7071067811865475, 0.7409511253549591, 0.7730104533627369, 0.8032075314806449, 0.8314696123025452, 0.8577286100002721, 0.881921264348355, 0.9039892931234433, 0.9238795325112867, 0.9415440651830208, 0.9569403357322089, 0.970031253194544, 0.9807852804032304, 0.989176509964781, 0.9951847266721969, 0.9987954562051724, 1, 0.9999751916296507, 0.9999007677495129, 0.999776732052257, 0.9996030906921302, 0.9993798522846508, 0.9991070279061809, 0.9987846310933769, 0.998412677842518, 0.9979911866087121, 0.9975201783049804, 0.99699967630122, 0.9964297064230436, 0.995810296950499, 0.9951414786166655, 0.9944232846061286, 0.9936557505533347, 0.9928389145408214, 0.9919728170973298, 0.9910575011957918, 0.9900930122511994, 0.9890793981183503, 0.9880167090894743, 0.9869049978917371, 0.9857443196846253, 0.9845347320572082, 0.9832762950252816, 0.9819690710283894, 0.9806131249267257, 0.9792085239979166, 0.9777553379336822, 0.9762536388363786, 0.9747035012154205, 0.9731050019835844, 0.9714582204531921, 0.9697632383321757, 0.9680201397200238, 0.966229011103608, 0.9643899413528927, 0.9625030217165246, 0.9605683458173062, 0.9585860096475498, 0.9565561115643152, 0.9544787522845292, 0.9523540348799885, 0.9501820647722455, 0.9479629497273782, 0.9456967998506421, 0.943383727581008, 0.941023847685583, 0.9386172772539161, 0.936164135692188, 0.9336645447172878, 0.9311186283507725, 0.9285265129127147, 0.9258883270154336, 0.9232042015571147, 0.9204742697153152, 0.9176986669403552, 0.9148775309485979, 0.9120110017156163, 0.9090992214692483, 0.9061423346825389, 0.9031404880665733, 0.9000938305631968, 0.8970025133376245, 0.8938666897709417, 0.8906865154524932, 0.8874621481721635, 0.884193747912548, 0.8808814768410147, 0.8775254993016587, 0.8741259818071471, 0.870683093030458, 0.8671970037965111, 0.863667887073692, 0.8600959179652701, 0.8564812737007104, 0.85282413362688, 0.8491246791991497, 0.8453830939723906, 0.8415995635918666, 0.8377742757840237, 0.833907420347175, 0.8299991891420841, 0.8260497760824452, 0.8220593771252621, 0.8180281902611252, 0.8139564155043877, 0.8098442548832419, 0.8056919124296951, 0.8014995941694462, 0.797267508111663, 0.7929958642386623, 0.7886848744954904, 0.7843347527794076, 0.7799457149292749, 0.7755179787148454, 0.7710517638259587, 0.7665472918616408, 0.7620047863191094, 0.7574244725826837, 0.7528065779126031, 0.7481513314337497, 0.743458964124281, 0.7387297088041691, 0.7339638001236489, 0.7291614745515758, 0.7243229703636922, 0.7194485276308057, 0.7145383882068777, 0.7095927957170226, 0.7046119955454205, 0.6995962348231424, 0.694545762415887, 0.6894608289116343, 0.6843416866082115, 0.6791885895007749, 0.6740017932692074, 0.6687815552654326, 0.6635281345006462, 0.6582417916324638, 0.6529227889519886, 0.6475713903707978, 0.642187861407847, 0.6367724691762967, 0.6313254823702592, 0.6258471712514663, 0.6203378076358603, 0.614797664880107, 0.6092270178680332, 0.6036261429969871, 0.5979953181641249, 0.5923348227526222, 0.5866449376178121, 0.5809259450732498, 0.5751781288767056, 0.5694017742160854, 0.5635971676952802, 0.5577645973199471, 0.5519043524832177, 0.5460167239513406, 0.5401020038492539, 0.5341604856460913, 0.5281924641406208, 0.5221982354466179, 0.5161780969781734, 0.5101323474349367, 0.5040612867872953, 0.497965216261491, 0.4918444383246744, 0.48569925666989733, 0.4795299762010444, 0.4733369030177049, 0.46712034439998523, 0.46088060879326226, 0.45461800579287975, 0.4483328461287867, 0.44202544165012053, 0.4356961053097337, 0.4293451511486662, 0.42297289428056384, 0.4165796508760433, 0.41016573814700485, 0.4037314743308933, 0.39727717867490775, 0.39080317142016235, 0.3843097737857964, 0.3777973079530364, 0.37126609704921093, 0.3647164651317179, 0.3581487371719459, 0.35156323903915, 0.34496029748428336, 0.3383402401237851, 0.33170339542332467, 0.32505009268150453, 0.31838066201352166, 0.3116954343347882, 0.30499474134451227, 0.29827891550924057, 0.29154829004636207, 0.2848031989075752, 0.2780439767623179, 0.27127095898116266, 0.2644844816191766, 0.25768488139924717, 0.25087249569537534, 0.24404766251593607, 0.2372107204869076, 0.23036200883506977, 0.2235018673711727, 0.21663063647307654, 0.20974865706886306, 0.2028562706199199, 0.19595381910399823, 0.1890416449982451, 0.18212009126221085, 0.17518950132083239, 0.16825021904739368, 0.161302588746464, 0.15434695513681446, 0.14738366333431419, 0.14041305883480704, 0.13343548749696893, 0.12645129552514767, 0.11946082945218531, 0.11246443612222433, 0.10546246267349844, 0.09845525652110863, 0.09144316533978557, 0.08442653704663915, 0.07740571978389599, 0.0703810619016257, 0.06335291194045693, 0.05632161861428389, 0.04928753079296433, 0.042250997485009725, 0.03521236782026864, 0.028171991032604017, 0.02113021644256536, 0.014087393440056564, 0.007043871467000329, 0]

  for (let i = 0; i < 256; i++) {
    curve[i] = f32(vals[i])
    lineUp[i] = <f32> valsLineUp[i]
    lineDown[i] = <f32> valsLineDown[i]

    curveExpUp[i] = <f32> valscurveExpUp[i]
    curveExpDown[i] = <f32> valscurveExpDown[i]
    
    curveRootUp[i] = <f32> valsCurveRootUp[i]
    curveRootDown[i] = <f32> valsCurveRootDown[i]

    curveRootMidUp[i] = <f32> valsCurveRootMidUp[i]
    curveRootMidDown[i] = <f32> valsCurveRootMidDown[i]

    curveShadows[i] = <f32> valsCurveShadows[i]

    curveGrayUp[i] = <f32> valsCurveGrayUp[i]
    curveGrayDown[i] = <f32> valsCurveGrayDown[i]
  }
}

export function process (runPercentileStretch: bool, runGrayWorld: bool, runCenterShift: bool, 
   keepBalance: bool, limit: i32, limitValue: i32, 
   balanceStrength: i32, 
   newCenter: i32
   ): void {
  // Run percentile stretch
  if (runPercentileStretch) {
    percentileStretch(keepBalance, limit, limitValue)
    calculateCounts(1)
    calculateDisplayCounts(1)
    if (!runGrayWorld) {
      copyData(1, 2)
    }
  }
  // End percentile stretch

  // Run gray world
  if (runGrayWorld) {
    grayWorld(balanceStrength)
    calculateCounts(2)
    calculateDisplayCounts(2)
  }
  // End gray world

  // Center Shift
  if (runCenterShift) {
    centerShift(newCenter)
    calculateCounts(3)
    calculateDisplayCounts(3)
  }
  // End center shift

  // Run Levels
  // if (runLevels) {
  //   levels(levels0, levels1, levels2, levels3, levels4)
  //   calculateCounts(3)
  //   calculateDisplayCounts(3)
  // }
  // End Levels
}
export function calculateClips (limit: i32, limitValue: i32):void {
  
}

export function percentileStretch (keepBalance: bool, limit: i32, limitValue: i32): void {
  const clips = new Uint8ClampedArray(6)
  clips[1] = 255
  clips[3] = 255
  clips[5] = 255
  
  if (limitValue >= 0) {
    let countOffset = countOffsets[0]
    for (let chan = 0; chan < 3; chan++) {
      const limitL: u32 = limit + load<u32>(countOffset)
      const limitR: u32 = limit + load<u32>(countOffset + 255 * 4)
      let sumL: u32 = 0
      let sumR: u32 = 0
      let clipL: u8 = 0
      let clipR: u8 = 255
      for (let i: i32 = 0; i <= 255; i++) {
        sumL += load<u32>(countOffset + i * 4)
        if (sumL <= limitL) {
          clipL = i as u8
        } else {
          break
        }
      }
      for (let i: i32 = 255; i >= 0; i--) {
        sumR += load<u32>(countOffset + i * 4)
        if (sumR <= limitR) {
          clipR = i as u8
        } else {
          break
        }
      }
      clips[0 + chan * 2] = clipL
      clips[1 + chan * 2] = clipR
      countOffset += 256 * 4
    }
  }

  if (keepBalance) {
    let minL = clips[0]
    minL = clips[2] < minL ? clips[2] : minL
    minL = clips[4] < minL ? clips[4] : minL

    clips[0] = minL
    clips[2] = minL
    clips[4] = minL

    let maxR = clips[1]
    maxR = clips[3] > maxR ? clips[3] : maxR
    maxR = clips[5] > maxR ? clips[5] : maxR

    clips[1] = maxR
    clips[3] = maxR
    clips[5] = maxR
  }
  // 

  const rfactor: f32 = 1.0 / (unchecked(clips[1]) - unchecked(clips[0])) * 255
  const gfactor: f32 = 1.0 / (unchecked(clips[3]) - unchecked(clips[2])) * 255
  const bfactor: f32 = 1.0 / (unchecked(clips[5]) - unchecked(clips[4])) * 255

  let value: u32 = 0
  let r: i16 = 0
  let g: i16 = 0
  let b: i16 = 0
  let rCurve: f32 = 1
  let gCurve: f32 = 1
  let bCurve: f32 = 1
  const rclipL = unchecked(clips[0])
  const gclipL = unchecked(clips[2])
  const bclipL = unchecked(clips[4])

  const resultOffset = viewOffsets[1]

  for (let i = 0; i < viewLength; i += 4) {
    // value = load<u32>(i + viewLength)
    // r = f32(value & 0xff)
    // g = f32(value >> 8 & 0xff)
    // b = f32(value >> 16 & 0xff) 
    r = load<u8>(i)
    g = load<u8>(i + 1) 
    b = load<u8>(i + 2)
    rCurve = unchecked(curve[(r)])
    gCurve = unchecked(curve[(g)])
    bCurve = unchecked(curve[(b)])


    r = <i16>((r * (1.0 - rCurve)) + (r - rclipL) * rfactor * rCurve)
    g = <i16>((g * (1.0 - gCurve)) + (g - gclipL) * gfactor * gCurve)
    b = <i16>((b * (1.0 - bCurve)) + (b - bclipL) * bfactor * bCurve)

    // r = (r > 255) ? 255 : (r < 0) ? 0 : r
    // g = (g > 255) ? 255 : (g < 0) ? 0 : g
    // b = (b > 255) ? 255 : (b < 0) ? 0 : b

    // r = r < 0 ? 0 : r
    // r = r > 255 ? 255 : r
    // g = g < 0 ? 0 : g
    // g = g > 255 ? 255 : g
    // b = b < 0 ? 0 : b
    // b = b > 255 ? 255 : b

    // r = <i16>Math.min(Math.max(r, 0), 255)
    if (r > 255) {
      r = 255
    } else if (r < 0) {
      r = 0
    }
    if (g > 255) {
      g = 255
    } else if (g < 0) {
      g = 0
    }
    if (b > 255) {
      b = 255
    } else if (b < 0) {
      b = 0
    }
    // store<u32>(i, 0b11111111000000000000000000000000 | 
    //   (u32(b) << 16) | 
    //   (u32(g) << 8) | 
    //   u32(r))
    store<u8>(resultOffset + i, (r))
    store<u8>(resultOffset + i + 1,(g))
    store<u8>(resultOffset + i + 2, (b))
  }
}

export function grayWorld (strength: i32): void {
  let sumR: f32 = 0
  let sumG: f32 = 0
  let sumB: f32 = 0

  const originStartOffset = viewOffsets[1]
  const originEndOffset = originStartOffset + viewLength

  for (let i = originStartOffset; i < originEndOffset; i += 4) {
    sumR += load<u8>(i)
    sumG += load<u8>(i + 1)
    sumB += load<u8>(i + 2)
  }
  const meanR: u32 = u32(sumR / f32(channelLength))
  const meanG: u32 = u32(sumG / f32(channelLength))
  const meanB: u32 = u32(sumB / f32(channelLength))

  const factorR: f32 = 128.0 / f32(meanR)
  const factorG: f32 = 128.0 / f32(meanG)
  const factorB: f32 = 128.0 / f32(meanB)

  let r: i32 = 0
  let g: i32 = 0
  let b: i32 = 0
  let dstR: f32 = 0
  let dstG: f32 = 0
  let dstB: f32 = 0

  const f: f32 = f32(strength) * 0.1

  let curveR: f32 = 0
  let curveG: f32 = 0
  let curveB: f32 = 0

  const targetOffset = viewOffsets[2]
  // (a * (1.0 - f)) + (b * f)
  for (let i = 0; i < viewLength; i += 4) {
    r = load<u8>(originStartOffset + i)
    g = load<u8>(originStartOffset + i + 1)
    b = load<u8>(originStartOffset + i + 2)

    if (factorR > 1) {
      curveR = unchecked(curveExpDown[r])
    } else {
      curveR = unchecked(curveGrayDown[r])
    }
    if (factorG > 1) {
      curveG = unchecked(curveExpDown[g])
    } else {
      curveG = unchecked(curveGrayDown[g])
    }
    if (factorB > 1) {
      curveB = unchecked(curveExpDown[b])
    } else {
      curveB = unchecked(curveGrayDown[b])
    }
    // newR = (<f32>r * (1.0 - (f * curveR))) + (<f32>r * factorR * curveR * f)
    // newG = (<f32>g * (1.0 - (f * curveG))) + (<f32>g * factorG * curveG * f)
    // newB = (<f32>b * (1.0 - (f * curveB))) + (<f32>b * factorB * curveB * f)
    
    dstR = factorR * <f32> r
    dstG = factorG * <f32> g
    dstB = factorB * <f32> b

    if (dstR > 255) {
      dstR = 255
    } else if (dstR < 0) {
      dstR = 0
    }
    if (dstG > 255) {
      dstG = 255
    } else if (dstG < 0) {
      dstG = 0
    }
    if (dstB > 255) {
      dstB = 255
    } else if (dstB < 0) {
      dstB = 0
    }

    dstR = lerp(<f32> r, dstR, f * curveR)
    dstG = lerp(<f32> g, dstG, f * curveG)
    dstB = lerp(<f32> b, dstB, f * curveB)

    store<u8>(targetOffset + i, u8(dstR))
    store<u8>(targetOffset + i + 1, u8(dstG))
    store<u8>(targetOffset + i + 2, u8(dstB))
  }
}

export function centerShift (newCenter: i32): void {
  if (newCenter == 0) {
    copyData(2, 3)
    return
  }

  const viewStart = viewOffsets[2]
  const viewEnd = viewStart + viewLength

  let r: i16 = 0
  let g: i16 = 0
  let b: i16 = 0

  const influenceCenter: i32 = 127 - newCenter

  const factorToCenter: f32 = 127.0 / (127.0 - <f32> newCenter)

  const influences = new Float32Array(256)

  for (let i = 0; i <= influenceCenter; i++) {
    influences[i] = findPercentage(<f32> i, 0.0 - <f32> (influenceCenter * 0), <f32> influenceCenter)
  }

  for (let i = influenceCenter + 1; i < 256; i++) {
    influences[i] = findPercentage(<f32> i, 255.0 + <f32> (influenceCenter * 0), <f32> influenceCenter + 1.0)
  }

  for (let i = 0; i < 256; i++) {
    // consoleFloat(influences[i])
  }

  let avg: i16 = 0
  let highest: i16 = 0
  let lowest: i16 = 0
  let localCurve: i16
  const divisorThree: f32 = 1.0 / 3.0

  for (let i = 0; i < viewLength; i += 4) {
    r = load<u8>(viewStart + i)
    g = load<u8>(viewStart + i + 1)
    b = load<u8>(viewStart + i + 2)

    avg = <i16> ((r + g + b) * divisorThree)

    highest = r
    if (r < g) {
      highest = g
      if (g < b) {
        highest = b
      }
    } else if (r < b) {
      highest = b
    }
    lowest = r
    if (r > g) {
      lowest = g
      if (g > b) {
        lowest = b
      }
    } else if (r > b) {
      lowest = b
    }

    let dstR: f32 = <f32> (r  + newCenter)
    let dstG: f32 = <f32> (g  + newCenter)
    let dstB: f32 = <f32> (b  + newCenter)


    if (dstR > 255) {
      dstR = 255
    } else if (dstR < 0) {
      dstR = 0
    }
    if (dstG > 255) {
      dstG = 255
    } else if (dstG < 0) {
      dstG = 0
    }
    if (dstB > 255) {
      dstB = 255
    } else if (dstB < 0) {
      dstB = 0
    }

    localCurve = highest

    if (newCenter < 0) {
      localCurve = lowest
    }

    dstR = lerp(r, dstR, unchecked(influences[localCurve]))
    dstG = lerp(g, dstG, unchecked(influences[localCurve]))
    dstB = lerp(b, dstB, unchecked(influences[localCurve]))

    store<u8>(viewEnd + i, <u8> dstR)
    store<u8>(viewEnd + i + 1, <u8> dstG)
    store<u8>(viewEnd + i + 2, <u8> dstB)
  }
}

export function levels (levels0: i8, levels1: i8, levels2: i8, levels3: i8, levels4: i8): void{  
  const viewStart = viewOffsets[2]
  const viewEnd = viewStart + viewLength

  const expFactor: f32 = 0.01 * <f32> levels2
  const blackFactor: f32 = 0.01 * <f32> levels0
  
  // const medianer: f32 = 1.0 / 3.0
  // let avg: f32 = 0
  const expCompensation: f32 = <f32> Math.pow(2, levels2 * 0.02)

  let r: i16 = 0
  let g: i16 = 0
  let b: i16 = 0

  let blackDstR: f32 = 0
  let blackDstG: f32 = 0
  let blackDstB: f32 = 0
  let shadowDstR: f32 = 0
  let shadowDstG: f32 = 0
  let shadowDstB: f32 = 0
  let midDstR: f32 = 0
  let midDstG: f32 = 0
  let midDstB: f32 = 0
  let highlightDstR: f32 = 0
  let highlightDstG: f32 = 0
  let highlightDstB: f32 = 0
  let whiteDstR: f32 = 0
  let whiteDstG: f32 = 0
  let whiteDstB: f32 = 0
  
  let blackCurveR: f32 = 0
  let blackCurveG: f32 = 0
  let blackCurveB: f32 = 0
  let shadowCurveR: f32 = 0
  let shadowCurveG: f32 = 0
  let shadowCurveB: f32 = 0
  let midCurveR: f32 = 0
  let midCurveG: f32 = 0
  let midCurveB: f32 = 0
  let highlightCurveR: f32 = 0
  let highlightCurveG: f32 = 0
  let highlightCurveB: f32 = 0
  let whiteCurveR: f32 = 0
  let whiteCurveG: f32 = 0
  let whiteCurveB: f32 = 0

  for (let i = 0; i < viewLength; i += 4) {
    r = load<u8>(viewStart + i)
    g = load<u8>(viewStart + i + 1)
    b = load<u8>(viewStart + i + 2)
    // avg = <f32> (r + g + b) * medianer

    if (levels0 > 0) { // Blacks
      blackCurveR = unchecked(curveExpDown[r])
      blackCurveG = unchecked(curveExpDown[g])
      blackCurveB = unchecked(curveExpDown[b])
    } else {
      blackCurveR = unchecked(curveExpDown[r])
      blackCurveG = unchecked(curveExpDown[g])
      blackCurveB = unchecked(curveExpDown[b])
    }

    if (levels2 > 0) { // Mids
      midCurveR = unchecked(curveRootMidDown[r])
      midCurveG = unchecked(curveRootMidDown[g])
      midCurveB = unchecked(curveRootMidDown[b])
    } else {
      midCurveR = unchecked(curveRootMidUp[r])
      midCurveG = unchecked(curveRootMidUp[g])
      midCurveB = unchecked(curveRootMidUp[b])
    }

    if (levels4 > 0) { // White
      whiteCurveR = unchecked(curveExpUp[r])
      whiteCurveG = unchecked(curveExpUp[g])
      whiteCurveB = unchecked(curveExpUp[b])
    } else {
      whiteCurveR = unchecked(curveExpUp[r])
      whiteCurveG = unchecked(curveExpUp[g])
      whiteCurveB = unchecked(curveExpUp[b])
    }
    // midCurveR = 1
    // midCurveG = 1
    // midCurveB = 1

    midDstR = r * expCompensation
    midDstG = g * expCompensation
    midDstB = b * expCompensation

    if (midDstR > 255) {
      midDstR = 255
    } else if (midDstR < 0) {
      midDstR = 0
    }
    if (midDstG > 255) {
      midDstG = 255
    } else if (midDstG < 0) {
      midDstG = 0
    }
    if (midDstB > 255) {
      midDstB = 255
    } else if (midDstB < 0) {
      midDstB = 0
    }

    midDstR = <i16> lerp(r, midDstR, midCurveR)
    midDstG = <i16> lerp(g, midDstG, midCurveG)
    midDstB = <i16> lerp(b, midDstB, midCurveB)

    // Blacks
    blackDstR = midDstR + levels0
    blackDstG = midDstG + levels0
    blackDstB = midDstB + levels0

    if (blackDstR > 255) {
      blackDstR = 255
    } else if (blackDstR < 0) {
      blackDstR = 0
    }
    if (blackDstG > 255) {
      blackDstG = 255
    } else if (blackDstG < 0) {
      blackDstG = 0
    }
    if (blackDstB > 255) {
      blackDstB = 255
    } else if (blackDstB < 0) {
      blackDstB = 0
    }

    blackDstR = <i16> lerp(midDstR, blackDstR, blackCurveR)
    blackDstG = <i16> lerp(midDstG, blackDstG, blackCurveG)
    blackDstB = <i16> lerp(midDstB, blackDstB, blackCurveB)

    // White
    whiteDstR = blackDstR + levels4
    whiteDstG = blackDstG + levels4
    whiteDstB = blackDstB + levels4

    if (whiteDstR > 255) {
      whiteDstR = 255
    } else if (whiteDstR < 0) {
      whiteDstR = 0
    }
    if (whiteDstG > 255) {
      whiteDstG = 255
    } else if (whiteDstG < 0) {
      whiteDstG = 0
    }
    if (whiteDstB > 255) {
      whiteDstB = 255
    } else if (whiteDstB < 0) {
      whiteDstB = 0
    }

    whiteDstR = <i16> lerp(blackDstR, whiteDstR, whiteCurveR)
    whiteDstG = <i16> lerp(blackDstG, whiteDstG, whiteCurveG)
    whiteDstB = <i16> lerp(blackDstB, whiteDstB, whiteCurveB)

    shadowDstR = whiteDstR + levels1
    shadowDstG = whiteDstG + levels1
    shadowDstB = whiteDstB + levels1

    if (shadowDstR > 255) {
      shadowDstR = 255
    } else if (shadowDstR < 0) {
      shadowDstR = 0
    }
    if (shadowDstG > 255) {
      shadowDstG = 255
    } else if (shadowDstG < 0) {
      shadowDstG = 0
    }
    if (shadowDstB > 255) {
      shadowDstB = 255
    } else if (shadowDstB < 0) {
      shadowDstB = 0
    }

    shadowCurveR = unchecked(curveShadows[r])
    shadowCurveG = unchecked(curveShadows[g])
    shadowCurveB = unchecked(curveShadows[b])

    shadowDstR = <i16> lerp(whiteDstR, shadowDstR, shadowCurveR)
    shadowDstG = <i16> lerp(whiteDstG, shadowDstG, shadowCurveG)
    shadowDstB = <i16> lerp(whiteDstB, shadowDstB, shadowCurveB)

    store<u8>(viewEnd + i, <i8> shadowDstR)
    store<u8>(viewEnd + i + 1, <i8> shadowDstG)
    store<u8>(viewEnd + i + 2, <i8> shadowDstB)
  }
}

export function lerp (a: f32, b: f32, f: f32): f32 {
  return  (a * (1.0 - f)) + (b * f)
}

function findPercentage (number: f32, a: f32, b: f32): f32 {
  return (number - a) / (b - a)
}

export function calculateCounts (index: u32): void {
  clearCounts(index)
  const _viewOffset = viewOffsets[index]
  const _countOffset = countOffsets[index]
  const viewEnd = _viewOffset  + viewLength
  let countIndexR: u32 = 0
  let countIndexG: u32 = 0
  let countIndexB: u32 = 0
  for (let i = _viewOffset; i < viewEnd; i += 4) {
    countIndexR = _countOffset + 4 * load<u8>(i)
    countIndexG = _countOffset + 4 * load<u8>(i + 1) + 1024
    countIndexB = _countOffset + 4 * load<u8>(i + 2) + 2048

    store<u32>(countIndexR, load<u32>(countIndexR) + 1)
    store<u32>(countIndexG, load<u32>(countIndexG) + 1)
    store<u32>(countIndexB, load<u32>(countIndexB) + 1)
  }
}

export function calculateDisplayCounts (index: u32): void {
  clearDisplayCounts(index)
  const _countOffset = countOffsets[index]
  const _displayCountOffset = displayCountOffsets[index]
  let maxR: i32 = 0
  let maxG: i32 = 0
  let maxB: i32 = 0
  const endCount = _countOffset + 256 * 4
  for (let i = _countOffset; i < endCount; i += 4) {
    const r = load<i32>(i)
    const g = load<i32>(i + 256 * 4)
    const b = load<i32>(i + 512 * 4)
    if (r > maxR) {
      maxR = r
    }
    if (g > maxG) {
      maxG = g
    }
    if (b > maxB) {
      maxB = b
    }
  }
  const factorR: f32 = 100.0 / <f32>maxR
  const factorG: f32 = 100.0 / <f32>maxG
  const factorB: f32 = 100.0 / <f32>maxB

  for (let i = _countOffset, d = _displayCountOffset; i < endCount; i += 4, d++) {
    const r: f32 = <f32>load<i32>(i)
    const g: f32 = <f32>load<i32>(i + 256 * 4)
    const b: f32 = <f32>load<i32>(i + 512 * 4)

    let newR: i32 = 0
    let newG: i32 = 0
    let newB: i32 = 0

    if (g > 0) {
      newR = <i32>(factorR * r)
      if (newR < 1) {
        newR = 1
      } else if (newR > 100) {
        newR = 100
      }
    }
    if (g > 0) {
      newG = <i32>(factorG * g)
      if (newG < 1) {
        newG = 1
      } else if (newG > 100) {
        newG = 100
      }
    }
    if (b > 0) {
      newB = <i32>(factorB * b)
      if (newB < 1) {
        newB = 1
      } else if (newB > 100) {
        newB = 100
      }
    }

    store<u8>(d, <u8>newR)
    store<u8>(d + 256, <u8>(newG))
    store<u8>(d + 512, <u8>(newB))
  }

  // consoleLog(maxR)
  // consoleLog(maxG)
  // consoleLog(maxB)
  // const leftR: i32 = load<i32>(_countOffset)
  // const rightR: i32 = load<i32>(_countOffset + 255 * 4)
  // consoleLog(leftR)
  // consoleLog(rightR)
}

function clearCounts (index: u32): void {
  const countOffset = countOffsets[index]
  const endCountCache: u32 = countOffset + (256 * 4 * 3)
  for (let i: u32 = countOffset; i < endCountCache; i += 4) {
    store<u32>(i, 0)
  }
}

function clearDisplayCounts (index: u32): void {
  const displayCountOffset = displayCountOffsets[index]
  const endDisplayCount: u32 = displayCountOffset + (256 * 3)
  for (let i: u32 = displayCountOffset; i < endDisplayCount; i++) {
    store<u8>(i, 0)
  }
}

function copyData(from: u32, to: u32): void {
  const viewOrigin = viewOffsets[from]
  const countOrigin = countOffsets[from]
  const displayCountOrigin = displayCountOffsets[from]
  
  const viewDest = viewOffsets[to]
  const countDest = countOffsets[to]
  const displayCountDest = displayCountOffsets[to]
  
  for (let i: i32 = 0; i < viewLength; i++) {
    store<u8>(viewDest + i, load<u8>(viewOrigin + i))
  }
}
// [view8]  [view8original] [view8cache]  [counts]      [countsOriginal]
// [Full]   [Full]          [full]        [256 * 4 * 3] [256 * 4 * 3]
